/* GridWithClick.css */

.generate-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.generate-notification {
  display: flex;
  flex-direction: column;

  align-items: center;

  gap: 50px;

  width: fit-content;
}

.generate-control {
  display: flex;
  flex-direction: row;
  align-items: center;

  gap: 20px;
}

.generate-right {
  display: flex;
  flex-direction: column;

  align-items: center;

  gap: 20px;

  width: 300px;
}

.generate-right select {
  width: 100px;
}

/* Контейнер для компоненты */
.grid-container {
  display: grid;
  grid-template-columns: repeat(3, 120px);
  gap: 10px;
  justify-content: center;
}

/* Стили для элементов сетки */
.grid-item {
  width: 120px;
  height: 70px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 3px solid black;
  cursor: pointer;
  transition: all 0.1s ease-in-out;
}

.grid-item.active {
  border-width: 3px;
  border-style: solid;
  border-color: var(--btn-secondary-default, #4876f9);
}

/* Скругленные углы для элементов по краям */
.grid-item:nth-child(1) {
  border-top-left-radius: 14px;
}

.grid-item:nth-child(3) {
  border-top-right-radius: 14px;
}

.grid-item:nth-child(7) {
  border-bottom-left-radius: 14px;
}

.grid-item:nth-child(9) {
  border-bottom-right-radius: 14px;
}

.grid-item:not(.clickable) {
  opacity: 0.2;
  cursor: not-allowed;
  pointer-events: none; /* Запретить события мыши на неактивных элементах */
}

/* Пунктирная рамка при наведении */
.grid-item:hover {
  background: var(--btn-primary-default, #7b9fff);
  border-style: dashed;
  /* border-color: var(--btn-secondary-default, #4876F9); */

  color: white;
}

/* Выпадающий список */
select {
  margin-top: 20px;
  margin-left: 20px;
  float: right;
}

/* Результат снизу по центру */
.output {
  text-align: center;
  margin-top: 20px;
}

.generate_button {
  width: 200px;
  border-radius: 12px;

  padding: 12px 16px;

  background-color: #4876f9;
  color: white;
}

/* <div className='colorPickerComponents'>
          <label htmlFor="colorpicker_id">
            <div className='color_icon' onClick={() => setIsColorSelect(!isColorSelect)} style={{backgroundColor: color}}></div>
            <input type="text" id='colorpicker_id'/>
          </label>
          <div className={`color_container ${isColorSelect ? 'show' : ''}`}>
          <HexColorPicker color={color} onChange={setColor} />
          </div>
        </div> */

.company_add__header-color .colorPickerComponents {
  margin-top: 10px;
}

.company_add__header-color .colorPickerComponents .colorPickerComponents_label {
  border-radius: 12px !important;
  background: var(--BG-menu-nav, #f8f8f8) !important;

  color: var(--Txt-primary, #1c1c1c) !important;
  font-feature-settings: "clig" off, "liga" off !important;
  font-family: Nunito !important;
  font-size: 14px !important;
  font-style: normal !important;
  font-weight: 600 !important;
  line-height: 20px !important; /* 142.857% */

  padding: 8px 16px !important;

  display: flex !important;
  flex-direction: row !important;
  align-items: center !important;
  gap: 20px !important;

  text-indent: 0px !important;

  width: fit-content !important;
  height: fit-content !important;

  border: none !important;

  margin-top: 12px;
}

.company_add__header-color
  .colorPickerComponents
  .colorPickerComponents_label::after {
  display: none;
}

.company_add__header-color .color_icon {
  width: 32px;
  height: 32px;

  border-radius: 8px;
}

.company_add__header-color
  .colorPickerComponents
  .colorPickerComponents_label
  > input {
  background-color: rgba(255, 255, 255, 0) !important;

  width: 188px;
  border: none;
  outline: none;
  margin-left: -18px;
}

.company_add__header-color
  .colorPickerComponents
  .colorPickerComponents_label
  p {
  margin: 0;
  padding: 0;

  color: var(--Txt-primary, #1c1c1c);
  font-feature-settings: "clig" off, "liga" off;
  font-family: Nunito;
  font-size: 14px;
  font-style: normal;
  font-weight: 500;
  line-height: 20px; /* 142.857% */
}

.company_add__header-color .color_container {
  overflow: hidden;

  transition: all 0.15s ease-in-out;

  margin-top: 10px;
  opacity: 1;
}

.react-colorful {
  height: 228px !important;
  width: 280px !important;
}

.company_add__header {
  display: flex;
  flex-direction: row;
  gap: 16px;
}

.color_offers {
  width: 100%;

  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 12px;
  height: 46px;

  margin-top: 14px;

  list-style-type: none;
}

.color_offers--item {
  width: 100%;
  height: 100%;

  border-radius: 14px;

  border: 1px solid rgba(0, 0, 0, 0.165);

  cursor: pointer;
}

.rdp {
  margin: 0;

  padding: 16px;
  border-radius: 12px;
  background: var(--BG, #fff);
  /* Shadow */
  box-shadow: 0px 5px 16px 0px rgba(0, 0, 0, 0.2);

  width: fit-content;
}

.rdp-day {
  color: var(--Txt-primary, #1c1c1c) !important;
  text-align: center !important;
  font-family: Nunito !important;
  font-size: 15px !important;
  font-style: normal !important;
  font-weight: 400 !important;
  line-height: 24px !important; /* 160% */
  letter-spacing: -0.24px !important;
}

.rdp-day_outside {
  color: var(--Txt-secondary, #a4a4a4) !important;
  text-align: center !important;
  font-family: Nunito !important;
  font-size: 15px !important;
  font-style: normal !important;
  font-weight: 400 !important;
  line-height: 24px !important; /* 160% */
  letter-spacing: -0.24px !important;
}

.rdp-day_outside.rdp-day_selected {
  opacity: 1 !important;
}

.rdp-day:hover {
  border-radius: 8px !important;
  background: var(--Txt-accent, #bfcffc) !important;
}

.rdp-day_selected {
  border-radius: 8px !important;
  background: var(--Txt-accent, #4876f9) !important;

  color: white !important;
}

svg {
  overflow: visible !important;
  display: block;
  width: 100%;
}

.react-flow-container {
  width: 1200px;
  height: 900px;
  overflow: hidden;
  border: 1px solid #eee;
  border-radius: 0.5rem;
}

.react-flow__attribution a {
  display: none;
}

.react-flow__handle.connectionindicator {
  pointer-events: none !important;
  opacity: 0;
}

/* <div className="flow-node">
      <Handle type="target" position={targetPosition} />
      <Handle type="source" position={sourcePosition} />

      <label
        style={{ pointerEvents: "auto", cursor: "pointer" }}
        className="flow_node"
        htmlFor={data.type === "radio" ? data.id : ""}
      >
        {data.type === "radio" && (
          <input id={data.id} name="flow_structure" type="radio" />
        )}
        <div className="flow_node-info">
          <p>{data.name}</p>
          {data.head && <p>{data.head}</p>}
        </div>
      </label>
    </div> */

.flow-node label {
  display: flex;
  flex-direction: row;
  gap: 16px;

  background-color: rgba(240, 240, 240, 0.566);

  padding: 8px 22px;

  border-radius: 12px;
}

.flow-node label p:first-of-type {
  color: var(--Txt-primary, #1c1c1c);
  font-feature-settings: "clig" off, "liga" off;
  font-family: Nunito;
  font-size: 18px !important;
  font-style: normal;
  font-weight: 700;
  line-height: 150%; /* 27px */

  margin: 0;
}

.flow-node label p {
  color: var(--Txt-secondary, #a4a4a4);
  font-feature-settings: "clig" off, "liga" off;
  font-family: Nunito;
  font-size: 12px !important;
  font-style: normal;
  font-weight: 400;
  line-height: 150%; /* 24px */

  margin: 0;
}
